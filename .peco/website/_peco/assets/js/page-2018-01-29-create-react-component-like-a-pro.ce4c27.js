(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{189:function(t,e,a){"use strict";a.r(e);var n=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("layout-manager",{attrs:{page:t.$page}},[a("div",{staticClass:"markdown-body is-component"},[a("p",[t._v("不知道你有没有用过 "),a("a",{attrs:{href:"https://github.com/vue-land/create-vue-component"}},[t._v("vue-land/create-vue-component")]),t._v("，这是一个通过命令行初始化 vue 组件的工具，项目结构简洁，无需配置文件。使用 "),a("a",{attrs:{href:"https://poi.js.org/"}},[t._v("Poi")]),t._v(" 构建，可以打包你写的组件，构建 demo，内置 jest 测试... 总之用来写 vue 组件非常好用，我已经离不开它了。")]),t._v(" "),a("p",[t._v("最近在写 react，在我想用 react 写点简单的组件骗点 star 的时候也想有这么流畅的开发体验啊 (╯°A°)╯ 所以克隆了这个项目，魔改了一版，现在也能通过命令行初始化一个 react 组件了，基本上是体力活...比较适合我这种笨人..."),a("br")]),t._v(" "),a("p",[t._v("项目名字叫 create-react-component-with-no-config 嗯... 我在 npm 上已经找不到可以用的简洁的名字了 😂")]),t._v(" "),a("p",[t._v("create-vue-component 有的功能都有，就是这么好（no）用（face）")]),t._v(" "),a("p",[t._v("项目地址："),a("a",{attrs:{href:"https://github.com/luyilin/create-react-component-with-no-config"}},[t._v("https://github.com/luyilin/create-react-component-with-no-config")])]),t._v(" "),a("p",[t._v("用法：")]),t._v(" "),a("h4",{attrs:{id:"install"}},[t._v("Install")]),t._v(" "),a("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"bash"}},[a("pre",{attrs:{class:"language-bash"}},[a("code",{attrs:{class:"language-bash"}},[t._v("yarn global add create-react-component-with-no-config")])])]),a("h4",{attrs:{id:"usage"}},[t._v("Usage")]),t._v(" "),a("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"bash"}},[a("pre",{attrs:{class:"language-bash"}},[a("code",{attrs:{class:"language-bash"}},[t._v("create-react-component-with-no-config react-xxx\n"),a("span",{attrs:{class:"token comment"}},[t._v("# or")]),t._v("\ncreate-react-component react-xxx\n"),a("span",{attrs:{class:"token comment"}},[t._v("# or type less")]),t._v("\ncrc react-xxx\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# you can also create component in place")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" react-xxx "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" react-xxx\ncrc")])])]),a("p",[t._v("项目结构预览：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://wx3.sinaimg.cn/mw690/a2117cdbly1fnxfc4mh6mj20jq0cddgw.jpg",alt:"preview"}})]),t._v(" "),a("p",[t._v("用例："),a("a",{attrs:{href:"https://github.com/luyilin/react-multipane"}},[t._v("https://github.com/luyilin/react-multipane")])]),t._v(" "),a("p",[t._v("Enjoy!")])])])};n._withStripped=!0;var c=a(1),o=function(t){const e="wrap-page-2018-01-29-create-react-component-like-a-pro",a={slug:"create-react-component-like-a-pro",permalink:"/2018/01/29/create-react-component-like-a-pro",attributes:{title:"流畅地开发一个 react 组件",subTitle:"Create a react component like a pro 🎉",date:"2018-01-29T00:00:00.000Z",tags:["code"],type:"post",layout:"post"},body:'<p>不知道你有没有用过 <a href="https://github.com/vue-land/create-vue-component">vue-land/create-vue-component</a>，这是一个通过命令行初始化 vue 组件的工具，项目结构简洁，无需配置文件。使用 <a href="https://poi.js.org/">Poi</a> 构建，可以打包你写的组件，构建 demo，内置 jest 测试... 总之用来写 vue 组件非常好用，我已经离不开它了。</p>\n<p>最近在写 react，在我想用 react 写点简单的组件骗点 star 的时候也想有这么流畅的开发体验啊 (╯°A°)╯ 所以克隆了这个项目，魔改了一版，现在也能通过命令行初始化一个 react 组件了，基本上是体力活...比较适合我这种笨人...\x3c!--more--\x3e<br/></p>\n<p>项目名字叫 create-react-component-with-no-config 嗯... 我在 npm 上已经找不到可以用的简洁的名字了 😂</p>\n<p>create-vue-component 有的功能都有，就是这么好（no）用（face）</p>\n<p>项目地址：<a href="https://github.com/luyilin/create-react-component-with-no-config">https://github.com/luyilin/create-react-component-with-no-config</a></p>\n<p>用法：</p>\n<h4 id="install">Install</h4>\n<div class="pre-wrapper" v-pre="" data-lang="bash"><pre class="language-bash"><code class="language-bash">yarn global add create-react-component-with-no-config</code></pre></div><h4 id="usage">Usage</h4>\n<div class="pre-wrapper" v-pre="" data-lang="bash"><pre class="language-bash"><code class="language-bash">create-react-component-with-no-config react-xxx\n<span class="token comment"># or</span>\ncreate-react-component react-xxx\n<span class="token comment"># or type less</span>\ncrc react-xxx\n\n<span class="token comment"># you can also create component in place</span>\n<span class="token function">mkdir</span> react-xxx <span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> react-xxx\ncrc</code></pre></div><p>项目结构预览：</p>\n<p><img src="https://wx3.sinaimg.cn/mw690/a2117cdbly1fnxfc4mh6mj20jq0cddgw.jpg" alt="preview"></p>\n<p>用例：<a href="https://github.com/luyilin/react-multipane">https://github.com/luyilin/react-multipane</a></p>\n<p>Enjoy!</p>\n',excerpt:'<p>不知道你有没有用过 <a href="https://github.com/vue-land/create-vue-component">vue-land/create-vue-component</a>，这是一个通过命令行初始化 vue 组件的工具，项目结构简洁，无需配置文件。使用 <a href="https://poi.js.org/">Poi</a> 构建，可以打包你写的组件，构建 demo，内置 jest 测试... 总之用来写 vue 组件非常好用，我已经离不开它了。</p>\n'};t.options.name=e,t.options.computed=Object.assign({},t.options.computed,{$page:()=>a})},p=Object(c.a)({},n,[],!1,null,null,null);"function"==typeof o&&o(p),p.options.__file=".peco/data/_posts/create-react-component-like-a-pro.md.peson";e.default=p.exports}}]);