(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{198:function(s,a,n){"use strict";n.r(a);var t=function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("layout-manager",{attrs:{page:s.$page}},[n("div",{staticClass:"markdown-body is-component"},[n("p",[s._v("分页效果预览：")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://luyilin.github.io/Minemine-pagination/dist/index.html"}},[s._v("在线 demo")])]),s._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/luyilin/Minemine-pagination"}},[s._v("github 地址")])]),s._v(" "),n("li",[s._v("分页效果截图")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://i.loli.net/2018/12/05/5c079d83943bc.png",alt:"messagedboard"}})]),s._v(" "),n("h3",{attrs:{id:""}},[s._v("前言")]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("使用 vue-cli 初始化项目 ")]),s._v(" "),n("li",[s._v("使用 vuex 管理数据")]),s._v(" "),n("li",[s._v("node v6.9.2，npm v3.10.9")])])]),s._v(" "),n("h3",{attrs:{id:"-2"}},[s._v("分页原理")]),s._v(" "),n("p",[s._v("实现分页主要依靠两个参数，偏移量（offset）、限制数（limit）。点击分页发送 Ajax 请求，将这两个参数传给后端，后端从数据库筛选出对应的数据返回给前端，前端将获取到的数据添加到页面中，分页组件根据偏移量和限制数显示对应的页码，这是一个简单地实现分页的思路。")]),s._v(" "),n("h3",{attrs:{id:"-3"}},[s._v("分页类型")]),s._v(" "),n("p",[s._v("分页一般分为两种类型，一种经常用于移动端的滚动加载，或是一个按钮点击即可加载更多。这种分页实现起来比较简单，前端仅需定义一个 offset 变量，每次 ajax 请求时 offset += limit，然后将获取到的内容 append 上去即可。\n另一种是显示总页数、当前页数、上一页、下一页按钮，且页数较多时将中间页数用省略号表示。这种分页实现起来稍微复杂一点，但用户体验更好，本文讨论的就是如何使用 vue 实现这样的分页组件。")]),s._v(" "),n("h3",{attrs:{id:"-4"}},[s._v("分页组件")]),s._v(" "),n("p",[s._v("创建 pagination.vue 文件。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"vue"}},[n("pre",{attrs:{class:"language-vue"}},[n("code",{attrs:{class:"language-vue"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("class")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("page-wrap"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("ul")]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-show")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("prePage"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("class")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("li-page"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-tap")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("{methods: goPrePage}"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("上一页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("ul")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("ul")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("li")]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-for")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("i in showPageBtn"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v(":class")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("{active: i === currentPage, pointer: i, hover: i && i !== currentPage}"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n            "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-tap")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("{methods: goPage, i: i}"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n          "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("a")]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-if")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("i"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("class")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("notPointer"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("{{i}}"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("a")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n          "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("a")]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-else")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("···"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("a")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("li")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("ul")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("ul")]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-show")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("nextPage"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("class")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("li-page"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),n("span",{attrs:{class:"token attr-name"}},[s._v("v-tap")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("=")]),n("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("{methods: goNextPage}"),n("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("下一页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("ul")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),n("span",{attrs:{class:"token punctuation"}},[s._v(">")])])])])]),n("p",[s._v("组件的作用域是独立的，父组件通信通过 props 向其传递数据，分页组件通过 $emit 触发在父组件定义的事件实现和父组件的通信，因此预设从父组件获取到需显示的总数 num 为 30 , limit 为 5，当然你也可以随意设置这两个值～")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[n("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" that\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("default")]),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("data")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        that "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),s._v("\n        "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          num"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("30")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          limit"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("5")]),s._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("计算几个变量，在这里可以使用 vue 的计算属性 computed\n总页数 totalPage 应该等于需显示的总数除以每页显示的个数，并向上取整，这个很好理解。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[s._v("computed"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("totalPage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("ceil")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("num "),n("span",{attrs:{class:"token operator"}},[s._v("/")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("limit"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("偏移量 offset，因为点击上下页、制定页码均会改变 offset 变量，父组件也需要用到这个变量发送 ajax 请求，因此使用 vuex 存储 offset。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[n("span",{attrs:{class:"token comment"}},[s._v("// pagination.vue")]),s._v("\n    computed"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("offset")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("当前页面 currentPage，当前页面是比较重要的一个变量，显示用户当前所处页数，已知偏移量和每页显示数量可以得出当前页面是二者的余数向上取整，因为页数不从0开始，因此")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[s._v("computed"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("currentPage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("ceil")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset "),n("span",{attrs:{class:"token operator"}},[s._v("/")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("limit"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("是否显示上一页按钮 prePage，因为在首页的时候偏移量为0，因此只要偏移量不等于0则当前页面肯定不在第一页，则显示上一页按钮，并且 num 不等于 0。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[s._v("coumputed"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("prePage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset "),n("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("num\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("是否显示下一页按钮 nextPage，这个也很好理解，只要偏移量和每页显示的个数相加小于需显示的总数，则显示下一页按钮，并且 num 不等于 0。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[s._v("computed"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("nextPage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset "),n("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("limit "),n("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("num"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("num\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("页码计算 showPageBtn，页码计算是这个分页组件的核心内容，基本思路是当总页数不大于5时，显示全部页码；当总页数大于5时，始终显示首尾页码，当当前页码距首页小于2时，显示前三页页码和省略号；当当前页码距尾页小于2时，显示后三页页码，当当前页码距首页等于2时，显示前四页页码和省略号；当当前页码距尾页等于2时，显示后四页页码和省略号；当当前页码距首页大于3且距尾页大于3时，显示当前页码和当前页码的前一页和后一页，两边各有一个省略号；在这里我们使用0代表省略号")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[s._v("computed"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("showPageBtn")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" pageNum "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("totalPage"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n              index "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("currentPage"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n              arr "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pageNum "),n("span",{attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("5")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{attrs:{class:"token keyword"}},[s._v("for")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{attrs:{class:"token operator"}},[s._v("<=")]),s._v(" pageNum"),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{attrs:{class:"token operator"}},[s._v("++")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              arr"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("push")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" arr\n          "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index "),n("span",{attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("3")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pageNum"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index "),n("span",{attrs:{class:"token operator"}},[s._v(">=")]),s._v(" pageNum "),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum "),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum "),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("3")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("3")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("4")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pageNum"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" pageNum "),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum"),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("3")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum"),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum"),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index "),n("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageNum"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("p",[s._v("跳转事件，分别点击上一页、下一页和指定页码。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[s._v("methods"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("goPage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("params"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("params"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" params"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("currentPage"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n        that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'GO_PAGE'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("params"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i"),n("span",{attrs:{class:"token operator"}},[s._v("-")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("limit"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("$emit")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'getNew'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("goPrePage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'PRE_PAGE'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("limit"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("$emit")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'getNew'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{attrs:{class:"token function"}},[s._v("goNextPage")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'NEXT_PAGE'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("limit"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        that"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("$emit")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'getNew'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")])])])]),n("h3",{attrs:{id:"vuex"}},[s._v("vuex 部分")]),s._v(" "),n("p",[s._v("在此介绍一下 vuex 部分的实现，学习了二哲大大的 vuex 部分的结构。在 src 目录下（和 components 目录平级），新建 store 目录，其中 index.js 文件传入 mutation，初始化 vuex；")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[n("span",{attrs:{class:"token comment"}},[s._v("// vuex \bstore/index.js")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Vue "),n("span",{attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'vue'")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Vuex "),n("span",{attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'vuex'")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" mutations "),n("span",{attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'./mutations'")]),s._v("\n  \n  Vue"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("use")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Vuex"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n  "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" state "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    offset"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n  "),n("span",{attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Vuex"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Store")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    state"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    mutations\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")])])])]),n("p",[s._v("mutation-types.js 记录所有的事件名，其实这个文件最大的好处是能让我们更直观地管理所有的 vuex 方法，它的优点会在项目复杂后凸显出来，项目复杂时我们可能会使用 vuex 存储很多数据、定义很多方法，这时 mutation-types.js 就能更好更直观地管理这些方法。这也是一种设计理念嘛，有利于后期维护。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[n("span",{attrs:{class:"token comment"}},[s._v("// mutation-types.js")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{attrs:{class:"token constant"}},[s._v("PRE_PAGE")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'PRE_PAGE'")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{attrs:{class:"token constant"}},[s._v("NEXT_PAGE")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'NEXT_PAGE'")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{attrs:{class:"token constant"}},[s._v("GO_PAGE")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'GO_PAGE'")])])])]),n("p",[s._v("mutation.js 这是 vuex 的核心文件，注册了实现的所有事件，我们定义了点击上一页、下一页和跳转到指定页面的方法。")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"js"}},[n("pre",{attrs:{class:"language-js"}},[n("code",{attrs:{class:"language-js"}},[n("span",{attrs:{class:"token comment"}},[s._v("// mutation.js")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("as")]),s._v(" types "),n("span",{attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'./mutation-types'")]),s._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 分页 上一页")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("types"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token constant"}},[s._v("PRE_PAGE")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("state"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      state"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset "),n("span",{attrs:{class:"token operator"}},[s._v("-=")]),s._v(" offset\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 分页 下一页")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("types"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token constant"}},[s._v("NEXT_PAGE")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("state"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      state"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset "),n("span",{attrs:{class:"token operator"}},[s._v("+=")]),s._v(" offset\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 分页 跳转到指定页码")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("types"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token constant"}},[s._v("GO_PAGE")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("state"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      state"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" offset\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(";")])])])]),n("h3",{attrs:{id:"how-to-run"}},[s._v("how to run")]),s._v(" "),n("div",{pre:!0,attrs:{class:"pre-wrapper","data-lang":"bash"}},[n("pre",{attrs:{class:"language-bash"}},[n("code",{attrs:{class:"language-bash"}},[s._v("$ "),n("span",{attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" \n\n$ "),n("span",{attrs:{class:"token function"}},[s._v("npm")]),s._v(" run dev\n\n// 访问 http://localhost:8088/index.html")])])]),n("p",[s._v("最后打个小广告🎣 ๑乛◡乛๑")]),s._v(" "),n("p",[s._v("我的个人网站："),n("a",{attrs:{href:"https://minemine.cc/"}},[s._v("https://minemine.cc/")])]),s._v(" "),n("p",[s._v("github 地址："),n("a",{attrs:{href:"https://github.com/luyilin"}},[s._v("https://github.com/luyilin")])])])])};t._withStripped=!0;var p=n(1),o=function(s){const a="wrap-page-2017-04-19-vue-pagination",n={slug:"vue-pagination",permalink:"/2017/04/19/vue-pagination",attributes:{title:"使用 vue2.0 实现一个简洁的分页组件",date:"2017-04-19T00:00:00.000Z",tags:["code"],type:"post",layout:"post"},body:'<p>分页效果预览：</p>\n<ul>\n<li><a href="https://luyilin.github.io/Minemine-pagination/dist/index.html">在线 demo</a></li>\n<li><a href="https://github.com/luyilin/Minemine-pagination">github 地址</a></li>\n<li>分页效果截图</li>\n</ul>\n<p><img src="https://i.loli.net/2018/12/05/5c079d83943bc.png" alt="messagedboard"></p>\n<h3 id="">前言</h3>\n<blockquote>\n<ol>\n<li>使用 vue-cli 初始化项目 \x3c!--more--\x3e</li>\n<li>使用 vuex 管理数据</li>\n<li>node v6.9.2，npm v3.10.9</li>\n</ol>\n</blockquote>\n<h3 id="-2">分页原理</h3>\n<p>实现分页主要依靠两个参数，偏移量（offset）、限制数（limit）。点击分页发送 Ajax 请求，将这两个参数传给后端，后端从数据库筛选出对应的数据返回给前端，前端将获取到的数据添加到页面中，分页组件根据偏移量和限制数显示对应的页码，这是一个简单地实现分页的思路。</p>\n<h3 id="-3">分页类型</h3>\n<p>分页一般分为两种类型，一种经常用于移动端的滚动加载，或是一个按钮点击即可加载更多。这种分页实现起来比较简单，前端仅需定义一个 offset 变量，每次 ajax 请求时 offset += limit，然后将获取到的内容 append 上去即可。\n另一种是显示总页数、当前页数、上一页、下一页按钮，且页数较多时将中间页数用省略号表示。这种分页实现起来稍微复杂一点，但用户体验更好，本文讨论的就是如何使用 vue 实现这样的分页组件。</p>\n<h3 id="-4">分页组件</h3>\n<p>创建 pagination.vue 文件。</p>\n<div class="pre-wrapper" v-pre="" data-lang="vue"><pre class="language-vue"><code class="language-vue"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prePage<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li-page<span class="token punctuation">"</span></span> <span class="token attr-name">v-tap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{methods: goPrePage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i in showPageBtn<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active: i === currentPage, pointer: i, hover: i &amp;&amp; i !== currentPage}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">v-tap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{methods: goPage, i: i}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>notPointer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{i}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>···<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nextPage<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li-page<span class="token punctuation">"</span></span> <span class="token attr-name">v-tap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{methods: goNextPage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre></div><p>组件的作用域是独立的，父组件通信通过 props 向其传递数据，分页组件通过 $emit 触发在父组件定义的事件实现和父组件的通信，因此预设从父组件获取到需显示的总数 num 为 30 , limit 为 5，当然你也可以随意设置这两个值～</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js"><span class="token keyword">let</span> that\n  <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">{</span>\n      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        that <span class="token operator">=</span> <span class="token keyword">this</span>\n        <span class="token keyword">return</span><span class="token punctuation">{</span>\n          num<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n          limit<span class="token punctuation">:</span> <span class="token number">5</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span></code></pre></div><p>计算几个变量，在这里可以使用 vue 的计算属性 computed\n总页数 totalPage 应该等于需显示的总数除以每页显示的个数，并向上取整，这个很好理解。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js">computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">totalPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>num <span class="token operator">/</span> that<span class="token punctuation">.</span>limit<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><p>偏移量 offset，因为点击上下页、制定页码均会改变 offset 变量，父组件也需要用到这个变量发送 ajax 请求，因此使用 vuex 存储 offset。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js"><span class="token comment">// pagination.vue</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> that<span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>offset\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><p>当前页面 currentPage，当前页面是比较重要的一个变量，显示用户当前所处页数，已知偏移量和每页显示数量可以得出当前页面是二者的余数向上取整，因为页数不从0开始，因此</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js">computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">currentPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>offset <span class="token operator">/</span> that<span class="token punctuation">.</span>limit<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><p>是否显示上一页按钮 prePage，因为在首页的时候偏移量为0，因此只要偏移量不等于0则当前页面肯定不在第一页，则显示上一页按钮，并且 num 不等于 0。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js">coumputed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">prePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> that<span class="token punctuation">.</span>offset <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>num\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><p>是否显示下一页按钮 nextPage，这个也很好理解，只要偏移量和每页显示的个数相加小于需显示的总数，则显示下一页按钮，并且 num 不等于 0。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js">computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">nextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>offset <span class="token operator">+</span> that<span class="token punctuation">.</span>limit <span class="token operator">&lt;</span> that<span class="token punctuation">.</span>num<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>num\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><p>页码计算 showPageBtn，页码计算是这个分页组件的核心内容，基本思路是当总页数不大于5时，显示全部页码；当总页数大于5时，始终显示首尾页码，当当前页码距首页小于2时，显示前三页页码和省略号；当当前页码距尾页小于2时，显示后三页页码，当当前页码距首页等于2时，显示前四页页码和省略号；当当前页码距尾页等于2时，显示后四页页码和省略号；当当前页码距首页大于3且距尾页大于3时，显示当前页码和当前页码的前一页和后一页，两边各有一个省略号；在这里我们使用0代表省略号</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js">computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">showPageBtn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">let</span> pageNum <span class="token operator">=</span> that<span class="token punctuation">.</span>totalPage<span class="token punctuation">,</span>\n              index <span class="token operator">=</span> that<span class="token punctuation">.</span>currentPage<span class="token punctuation">,</span>\n              arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>pageNum <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pageNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> arr\n          <span class="token punctuation">}</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>pageNum<span class="token punctuation">]</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">>=</span> pageNum <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> pageNum <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> pageNum <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> pageNum<span class="token punctuation">]</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>pageNum<span class="token punctuation">]</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> pageNum <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> pageNum<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> pageNum<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> pageNum<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> pageNum<span class="token punctuation">]</span>\n          <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pageNum<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><p>跳转事件，分别点击上一页、下一页和指定页码。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js">methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function">goPage</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>i <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> params<span class="token punctuation">.</span>i <span class="token operator">===</span> that<span class="token punctuation">.</span>currentPage<span class="token punctuation">)</span> <span class="token keyword">return</span>\n        that<span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">\'GO_PAGE\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> that<span class="token punctuation">.</span>limit<span class="token punctuation">)</span>\n        that<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'getNew\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function">goPrePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        that<span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">\'PRE_PAGE\'</span><span class="token punctuation">,</span> that<span class="token punctuation">.</span>limit<span class="token punctuation">)</span>\n        that<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'getNew\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function">goNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        that<span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">\'NEXT_PAGE\'</span><span class="token punctuation">,</span> that<span class="token punctuation">.</span>limit<span class="token punctuation">)</span>\n        that<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'getNew\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span></code></pre></div><h3 id="vuex">vuex 部分</h3>\n<p>在此介绍一下 vuex 部分的实现，学习了二哲大大的 vuex 部分的结构。在 src 目录下（和 components 目录平级），新建 store 目录，其中 index.js 文件传入 mutation，初始化 vuex；</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js"><span class="token comment">// vuex \bstore/index.js</span>\n  <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n  <span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n  <span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">\'./mutations\'</span>\n  \n  Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  \n  <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    offset<span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  \n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    state<span class="token punctuation">,</span>\n    mutations\n  <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div><p>mutation-types.js 记录所有的事件名，其实这个文件最大的好处是能让我们更直观地管理所有的 vuex 方法，它的优点会在项目复杂后凸显出来，项目复杂时我们可能会使用 vuex 存储很多数据、定义很多方法，这时 mutation-types.js 就能更好更直观地管理这些方法。这也是一种设计理念嘛，有利于后期维护。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js"><span class="token comment">// mutation-types.js</span>\n    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">PRE_PAGE</span> <span class="token operator">=</span> <span class="token string">\'PRE_PAGE\'</span>\n    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">NEXT_PAGE</span> <span class="token operator">=</span> <span class="token string">\'NEXT_PAGE\'</span>\n    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">GO_PAGE</span> <span class="token operator">=</span> <span class="token string">\'GO_PAGE\'</span></code></pre></div><p>mutation.js 这是 vuex 的核心文件，注册了实现的所有事件，我们定义了点击上一页、下一页和跳转到指定页面的方法。</p>\n<div class="pre-wrapper" v-pre="" data-lang="js"><pre class="language-js"><code class="language-js"><span class="token comment">// mutation.js</span>\n  <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> types <span class="token keyword">from</span> <span class="token string">\'./mutation-types\'</span>\n\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 分页 上一页</span>\n    <span class="token punctuation">[</span>types<span class="token punctuation">.</span><span class="token constant">PRE_PAGE</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>offset <span class="token operator">-=</span> offset\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 分页 下一页</span>\n    <span class="token punctuation">[</span>types<span class="token punctuation">.</span><span class="token constant">NEXT_PAGE</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>offset <span class="token operator">+=</span> offset\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 分页 跳转到指定页码</span>\n    <span class="token punctuation">[</span>types<span class="token punctuation">.</span><span class="token constant">GO_PAGE</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>offset <span class="token operator">=</span> offset\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div><h3 id="how-to-run">how to run</h3>\n<div class="pre-wrapper" v-pre="" data-lang="bash"><pre class="language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> \n\n$ <span class="token function">npm</span> run dev\n\n// 访问 http://localhost:8088/index.html</code></pre></div><p>最后打个小广告🎣 ๑乛◡乛๑</p>\n<p>我的个人网站：<a href="https://minemine.cc/">https://minemine.cc/</a></p>\n<p>github 地址：<a href="https://github.com/luyilin">https://github.com/luyilin</a></p>\n',excerpt:"<p>分页效果预览：</p>\n"};s.options.name=a,s.options.computed=Object.assign({},s.options.computed,{$page:()=>n})},e=Object(p.a)({},t,[],!1,null,null,null);"function"==typeof o&&o(e),e.options.__file=".peco/data/_posts/vue-pagination.md.peson";a.default=e.exports}}]);